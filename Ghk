import org.apache.poi.xwpf.usermodel.*;
import org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBookmark;

import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class DotxBookmarkUpdater {

    public static void main(String[] args) throws Exception {
        // Input and output file paths
        String inputPath = "template.dotx";              // Path to your template
        String outputPath = "updated_template.dotx";     // Output path

        // Define bookmark replacements
        Map<String, String> bookmarkValues = new HashMap<>();
        bookmarkValues.put("NameField", "Shubham Gupta");
        bookmarkValues.put("AddressField", "Bangalore");
        bookmarkValues.put("DateField", "2025-07-02");

        // Load the document
        try (FileInputStream fis = new FileInputStream(inputPath);
             XWPFDocument doc = new XWPFDocument(fis)) {

            List<XWPFParagraph> paragraphs = doc.getParagraphs();

            // Process paragraphs for bookmarks
            for (XWPFParagraph para : paragraphs) {
                List<CTBookmark> bookmarks = para.getCTP().getBookmarkStartList();
                for (CTBookmark bookmark : bookmarks) {
                    String bookmarkName = bookmark.getName();
                    int bookmarkId = bookmark.getId().intValue();

                    if (bookmarkValues.containsKey(bookmarkName)) {
                        String newValue = bookmarkValues.get(bookmarkName);
                        updateBookmarkText(doc, para, bookmarkId, newValue);
                    }
                }
            }

            // Save the updated document
            try (FileOutputStream fos = new FileOutputStream(outputPath)) {
                doc.write(fos);
            }

            System.out.println("âœ… Bookmarks updated successfully. Output: " + outputPath);
        }
    }

    /**
     * Updates the text inside a given bookmark ID.
     * Works even if the bookmark is empty.
     */
    private static void updateBookmarkText(XWPFDocument doc, XWPFParagraph para, int bookmarkId, String newText) {
        boolean insideBookmark = false;
        boolean updated = false;

        List<XWPFRun> runs = para.getRuns();
        for (int i = 0; i < runs.size(); i++) {
            XWPFRun run = runs.get(i);

            // Detect bookmark start
            if (run.getCTR().getBookmarkStartList().stream().anyMatch(b -> b.getId().intValue() == bookmarkId)) {
                insideBookmark = true;
                continue;
            }

            // Detect bookmark end
            if (insideBookmark && run.getCTR().getBookmarkEndList().stream().anyMatch(b -> b.getId().intValue() == bookmarkId)) {
                if (!updated) {
                    // Insert new run just before bookmark end
                    XWPFRun insertRun = para.insertNewRun(i);
                    insertRun.setText(newText);
                    updated = true;
                }
                break;
            }

            // Replace existing text inside bookmark
            if (insideBookmark && run.text() != null && !run.text().isBlank()) {
                run.setText(newText, 0);
                updated = true;
            }
        }

        // If no runs were found, create a new run at the end
        if (insideBookmark && !updated) {
            XWPFRun newRun = para.createRun();
            newRun.setText(newText);
        }
    }
}
