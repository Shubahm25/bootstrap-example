import org.apache.poi.xwpf.usermodel.*;
import org.openxmlformats.schemas.wordprocessingml.x2006.main.*;

import java.io.*;
import java.util.*;

public class BookmarkAndSDTUpdater {

    public static void main(String[] args) throws Exception {
        String inputPath = "template.dotx";
        String outputPath = "updated_template.dotx";

        Map<String, String> bookmarkValues = Map.of(
                "NameField", "Shubham Gupta",
                "AddressField", "Bangalore",
                "DateField", "2025-07-02"
        );

        try (FileInputStream fis = new FileInputStream(inputPath);
             XWPFDocument doc = new XWPFDocument(fis)) {

            for (IBodyElement element : doc.getBodyElements()) {

                if (element instanceof XWPFParagraph paragraph) {
                    updateBookmarksInParagraph(paragraph, bookmarkValues);

                } else if (element instanceof XWPFTable table) {
                    updateBookmarksInTable(table, bookmarkValues);

                } else if (element instanceof XWPFSDT sdt) {
                    updateSDTContent(sdt, bookmarkValues);

                } else {
                    System.out.println("⚠️ Unknown element type: " + element.getClass().getSimpleName());
                }
            }

            try (FileOutputStream fos = new FileOutputStream(outputPath)) {
                doc.write(fos);
            }

            System.out.println("✅ Bookmarks and content controls updated successfully → " + outputPath);
        }
    }

    // ───────────────────────────────────────────
    // Paragraph bookmark updater
    private static void updateBookmarksInParagraph(XWPFParagraph para, Map<String, String> values) {
        List<CTBookmark> bookmarks = para.getCTP().getBookmarkStartList();

        for (CTBookmark bookmark : bookmarks) {
            String name = bookmark.getName();
            int id = bookmark.getId().intValue();

            if (values.containsKey(name)) {
                replaceTextInsideBookmark(para, id, values.get(name));
            }
        }
    }

    // ───────────────────────────────────────────
    // Table updater
    private static void updateBookmarksInTable(XWPFTable table, Map<String, String> values) {
        for (XWPFTableRow row : table.getRows()) {
            for (XWPFTableCell cell : row.getTableCells()) {
                for (XWPFParagraph para : cell.getParagraphs()) {
                    updateBookmarksInParagraph(para, values);
                }
            }
        }
    }

    // ───────────────────────────────────────────
    // Replace text strictly inside a bookmark range
    private static void replaceTextInsideBookmark(XWPFParagraph para, int bookmarkId, String newText) {
        boolean inBookmark = false;
        boolean replaced = false;

        List<XWPFRun> runs = para.getRuns();

        for (int i = 0; i < runs.size(); i++) {
            XWPFRun run = runs.get(i);

            // Check for bookmark start
            if (para.getCTP().getBookmarkStartList().stream().anyMatch(b -> b.getId().intValue() == bookmarkId)) {
                inBookmark = true;
                continue;
            }

            // Check for bookmark end
            if (inBookmark && para.getCTP().getBookmarkEndList().stream().anyMatch(e -> e.getId().intValue() == bookmarkId)) {
                if (!replaced) {
                    XWPFRun newRun = para.insertNewRun(i);
                    newRun.setText(newText);
                    replaced = true;
                }
                break;
            }

            // Replace existing text inside bookmark
            if (inBookmark && !replaced && run.text() != null && !run.text().isBlank()) {
                run.setText(newText, 0);
                replaced = true;
            }
        }

        // If bookmark is empty, add fallback
        if (inBookmark && !replaced) {
            XWPFRun newRun = para.createRun();
            newRun.setText(newText);
        }
    }

    // ───────────────────────────────────────────
    // Update content control (SDT) if title matches bookmark name
    private static void updateSDTContent(XWPFSDT sdt, Map<String, String> values) {
        String title = sdt.getTitle();
        if (values.containsKey(title)) {
            try {
                XWPFSDTContent content = sdt.getContent();
                List<IRunElement> runs = new ArrayList<>(content.getIRuns());

                // Remove all runs (if they are XWPFRun)
                for (IRunElement run : runs) {
                    if (run instanceof XWPFRun r) {
                        XWPFParagraph para = content.getParagraph(0);
                        if (para != null && para.getRuns().contains(r)) {
                            para.removeRun(para.getRuns().indexOf(r));
                        }
                    }
                }

                // Insert new run with replacement text
                XWPFParagraph para = content.getParagraph(0);
                if (para != null) {
                    XWPFRun newRun = para.createRun();
                    newRun.setText(values.get(title));
                }

            } catch (Exception e) {
                System.err.println("❌ Failed to update SDT '" + title + "': " + e.getMessage());
            }
        }
    }
}
